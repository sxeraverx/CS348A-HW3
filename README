Leilani Gilpin and Thomas Minor

The program is structured very similarly to the sample code provided. There is a global array storing the control points for a single quadrant of the torus. There is a function, recalcCtrlPoints, that is called whenever the m, r, or R parameter changes, to recalculate the control points. There are two functions, recalcPolarSliders and reclacCartesianSliders to recalculate the spherical coordinate and cartesian coordinate sliders, respectively, whenever the other changes.

Finally, there is DrawQuadrant, which draws a single quadrant of the NURBS torus. DrawScene setups up the NURBS renderer and calls DrawQuadrant repeatedly with different rotations to form the full torus.

Trivial callbacks were added for the viewpoint spherical coordinate sliders, as well as the torus parameter sliders.

There is nothing special or especially clever about the code. I have included pp1_ui.cxx.patch, as well as Makefile modifications to make use of it, to get the FLuid output to compile correctly with the project.
